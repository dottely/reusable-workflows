name: CI

on:
  workflow_call:
    secrets:
      COMPOSER_ACCESS_TOKEN:
        required: true
env:
  PHP_VERSION: 8.1
  PHP_EXTENSIONS: dom, curl, libxml, mbstring, zip, pdo, sqlite, pdo_sqlite


jobs:
  setup:
    name: Setup environment
    runs-on: ubuntu-latest
    steps:
      - name: Setup php
        uses: shivammathur/setup-php@v2
        with:
          php-version: $PHP_VERSION
          extensions: $PHP_EXTENSIONS

  fix:
    name: PHP-CS-Fixer
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure Composer
        run: composer config --auth github-oauth.github.com "${{ secrets.COMPOSER_ACCESS_TOKEN }}"
      - name: Install Dependencies
        uses: ramsey/composer-install@v2
      - name: Run linter
        run: vendor/bin/php-cs-fixer fix --dry-run --config ruleset-phpcsfixer.php --show-progress=dots -vvv

  analyze:
    name: PHPStan
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure Composer
        run: composer config --auth github-oauth.github.com "${{ secrets.COMPOSER_ACCESS_TOKEN }}"
      - name: Install Dependencies
        uses: ramsey/composer-install@v2
      - name: Run analyzer
        run: vendor/bin/phpstan analyse --memory-limit=1G -c ruleset-phpstan.neon --error-format=github -vvv

  test:
    name: PHPUnit
    runs-on: ubuntu-latest
    steps:
      - name: Setup php
        uses: shivammathur/setup-php@v2
        with:
          php-version: $PHP_VERSION
          extensions: $PHP_EXTENSIONS
          coverage: xdebug

      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure Composer
        run: composer config --auth github-oauth.github.com "${{ secrets.COMPOSER_ACCESS_TOKEN }}"
      - name: Install Dependencies
        uses: ramsey/composer-install@v2
      - name: Run tests
#        run: vendor/bin/phpunit -vvv
        run: vendor/bin/testbench package:test --coverage --min=80


